name: Docker Image CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    permissions: write-all
      # id-token: write
      # contents: read
      # actions: read|write|none
      # checks: read|write|none
      # deployments: read|write|none
      # issues: read|write|none
      # discussions: read|write|none
      # packages: read|write|none
      # pages: read|write|none
      # pull-requests: read|write|none
      # repository-projects: read|write|none
      # security-events: read|write|none
      # statuses: write



    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: |
        export IMAGE_TAG="$GITHUB_RUN_ID$(date '+%H%M%S')-$GITHUB_REF_NAME"
        docker build . --file Dockerfile --tag ${{ secrets.IMAGE_NAME }}:$IMAGE_TAG
        docker build . --file Dockerfile --tag ${{ secrets.IMAGE_NAME }}:$GITHUB_REF_NAME
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@2a2157eb22c08c9a1fac99263430307b8d1bc7a2
      with:
        image-ref: ${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH,MEDIUM'
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::553978640171:role/GitHubActions-ECRPush
        aws-region: ca-central-1
    - name: Test AWS Integration
      run: |
        aws s3 ls
